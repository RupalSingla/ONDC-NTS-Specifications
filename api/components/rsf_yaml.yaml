openapi: 3.0.0
info:
  title: Reconciliation and Settlement for RSP
  description: RSP API Specification
  version: 0.1.0-draft
security:
  - SubscriberAuth: []
paths:
  /recon:
    post:
      tags:
        - RSP
      description: Reconciliation of payment for order book - called by collector
      requestBody:
        description: Collector (i.e. buyer or seller app who collects payment from the buyer) sends order book to RSP for payment reconciliation and settlement
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    orderbook:
                      $ref: '#/components/schemas/OrderBook'
              required:
                - context
                - message.orderbook.orders.id
                - message.orderbook.orders.invoice_no
                - message.orderbook.orders.collector_app_id
                - message.orderbook.orders.receiver_app_id
                - message.orderbook.orders.state
                - message.orderbook.orders.provider
                - message.orderbook.orders.payment
                - message.orderbook.orders.settlement_reason_code
                - message.orderbook.orders.created_at
                - message.orderbook.orders.updated_at
      responses:
        '200':
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Error'
                required:
                  - message
  /on_settle:
    post:
      tags:
        - RSP
      description: Settlement status for payments to different receivers (buyer or seller app that will receive money from the collector)
      requestBody:
        description: Settlement Agency responding to RSP with settlement state
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    settlement:
                      $ref: '#/components/schemas/Settlement'
              required:
                - context
                - message.settlement.settlements.settlement_id
                - message.settlement.settlements.state
                - message.settlement.settlements.settlement_reference_no
      responses:
        '200':
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Error'
                required:
                  - message
  /on_recon:
    post:
      tags:
        - Collector
        - Receiver
      description: Payment reconciliation and settlement status for Order Book
      requestBody:
        description: Updating reconciliation and settlement status for Order Book
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Context'
                message:
                  type: object
                  properties:
                    orderbook:
                      $ref: '#/components/schemas/OrderBook'
              required:
                - context
                - message.orderbook.orders.id
                - message.orderbook.orders.invoice_no
                - message.orderbook.orders.collector_app_id
                - message.orderbook.orders.receiver_app_id
                - message.orderbook.orders.transaction_id
                - message.orderbook.orders.settlement_id
                - message.orderbook.orders.settlement_reference_no
                - message.orderbook.orders.recon_status
      responses:
        '200':
          description: Acknowledgement of message received
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: object
                    properties:
                      ack:
                        $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Ack'
                    required:
                      - ack
                  error:
                    $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Error'
                required:
                  - message
components:
  securitySchemes:
    SubscriberAuth:
      type: apiKey
      in: header
      name: Authorization
      description: 'Signature of message body using Collector or Receiver subscriber''s signing public key. <br/><br/>Format:<br/><br/><code>Authorization : Signature keyId="{subscriber_id}|{unique_key_id}|{algorithm}",algorithm="ed25519",created="1606970629",expires="1607030629",headers="(created) (expires) digest",signature="Base64(signing string)"</code>'
  schemas:
    OrderBook:
      description: Describes the payment and settlement contract for an order
      type: object
      properties:
        orders:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Order id
              invoice_no:
                type: string
                description: Invoice Number of the Order
                example: "2022/XYZ/12345-2"
              collector_app_id:
                type: string
              receiver_app_id:
                type: string
              state:
                type: string
                description: Order state
              provider:
                $ref: '#/components/schemas/Provider'
              payment:
                $ref: 'https://raw.githubusercontent.com/Open-network-for-digital-commerce/ONDC-Protocol-Specs/master/protocol-specifications/core/v0/api/retail-hyperlocal.yaml#/components/schemas/Payment'
              settlement_reason_code:
                type: string
                description: "Reason code for settlement"
                enum:
                  - "01"
                  - "02"
                  - "03"
                  - "04"
              payout_bank_uri:
                type: string
                format: uri
                description: URI of the Payout Bank.
                example: "https://rsp.somebank.com/rsp/"
              correction:
                 $ref: '#/components/schemas/Correction'
              transaction_id:
                type: string
                description: Unique identifier for transaction
              settlement_id:
                type: string
                description: "Unique identifier for each settlement"
                example: "121313"
              settlement_reference_no:
                type: string
                description: "Reference number, in case of successful settlement"
                example: "3718683618631"
              recon_status:
                type: string
                enum:
                  - "01"
                  - "02"
                  - "03"
                  - "04"
              diff_amount:
                $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Price'
              counterparty_recon_status:
                type: string
                enum:
                  - "01"
                  - "02"
                  - "03"
                  - "04"
              counterparty_diff_amount:
                $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Price'
              message:
                $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Descriptor'
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
    Provider:
      description: Provider for Order
      type: object
      properties:
        name:
          $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Provider/properties/descriptor'
        address:
          $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Address/properties/full'
      required:
        - name
        - address
    Settlement:
      description: Settlement details
      type: object
      properties:
        settlements:
          type: array
          items:
            type: object
            properties:
              payer_account_no:
                type: number
                description: "Debit Account Number of the client. This field is used when client maintains multiple debit account numbers with Bank"
              amount_currency:
                $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Price/properties/currency'
              amount_value:
                $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Price/properties/value'
              payee_name:
                type: string
                description: "Payee name"
                example: "A to Z Printing Solutions Pvt. Ltd"
              payee_address:
                $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Address/properties/full'
              payee_account_no:
                type: string
                description: "Account number of the beneficiary which is to be credited (without special characters and can be alpha numeric)"
              payee_bank_code:
                type: string
                description: "Bank Code of Payee e.g. IFSC code"
              payee_virtual_payment_address:
                type: string
                pattern: '^([a-zA-Z0-9]{2,10})@([a-zA-Z0-9]{2,10})'
              payment_type:
                type: string
                description: "Payment type allocated by the bank"
                enum:
                  - "01"
                  - "02"
                  - "03"
                  - "04"
                  - "05"
              purpose_code:
                type: string
                maxLength: 10
                description: "For RTGS / IFT transaction it should contain CMS and for NEFT it should be OTH"
                enum:
                  - "01"
                  - "02"
              payee_account_type:
                type: string
                description: "Type of Beneficiary Account"
                enum:
                  - "01"
                  - "02"
                  - "03"
              timestamp:
                type: string
                format: date-time
              remarks:
                $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Descriptor/properties/name'
              settlement_id:
                type: string
                description: "Unique identifier for each settlement"
                example: "121313"
              state:
                type: string
                description: settlement state
                enum:
                  - "01"
                  - "02"
                  - "03"
              settlement_reference_no:
                type: string
                description: "Reference number, in case of successful settlement"
                example: "3718683618631"
              error_code:
                type: string
                description: "Error Message Code, to be provided by bank. Only required if settlement_status = 03"
                enum:
                  - "01"
                  - "02"
                  - "03"
                  - "04"
              error_message:
                type: string
                description: Message for error on settlement. Only required if settlement_status = "03"
                example: "Account not active or not found"
            required:
              - payer_account_no
              - amount_currency
              - amount_value
              - payee_name
              - payee_address
              - payee_account_no
              - payee_bank_code
              - payment_type
              - purpose_code
              - payee_account_type
              - timestamp
    Correction:
      description: Correction, which will be added to OrderBook after dispute resolution
      type: object
      properties:
        issue_initiator_ref:
          type: string
          description: "CRM ID or Ticket Number of Grievance or Issue Initiator"
          example: "1243242GQT$"
        issue_responder_ref:
          type: string
          description: "CRM ID or Ticket Number No. of Grievance or Issue Responder"
          example: "122424HGYG98"
        issue_type:
          type: string
          description: "Type of Issue"
          enum:
            - "01"
            - "02"
            - "03"
        issue_subtype:
          type: string
          description: "Subtype of Issue"
          enum:
            - "01"
            - "02"
            - "03"
            - "04"
            - "05"
        order_id:
          type: string
          description: "Original Order ID"
        order_amount:
          $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Price'
        order_correction_amount:
          $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Price'
        order_state:
          type: string
          description: "Order State"
        previous_settled_amount:
          $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Price'
        settlement_id:
          type: string
          description: "Unique identifier for each settlement"
          example: "121313"
        settlement_reference_no:
          type: string
          description: "Reference number, in case of successful settlement"
          example: "3718683618631"
        recon_status:
          type: string
          enum:
            - "01"
            - "02"
            - "03"
            - "04"
        diff_amount:
          $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Price'
        message:
          $ref: 'https://raw.githubusercontent.com/beckn/protocol-specifications/draft/core/v0/api/core.yaml#/components/schemas/Descriptor'